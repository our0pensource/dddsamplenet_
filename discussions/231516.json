[
  {
    "Id": "509481",
    "ThreadId": "231516",
    "Html": "<p>Hi,</p>\r\n<p>first of all, thank you very much for this sample. It's a nice piece of code and it helped me a lot in understanding cqrs and event sourcing. But there are two things in the event sourcing branch that I don't understand. Both are related to the private Apply() method in the DDDSample.Domain.AggregateRoot class. First, why do you call these On*() methods? If an entity should be notified about them why don't you just use Bus.Register()? Second, why do you use reflections? This seems kind of dirty ;) to me... Why don't you use e.g. overloads of say AggregateRoot.OnEvent(Event e) or something like this?</p>\r\n<p>Thank you!</p>",
    "PostedDate": "2010-10-19T09:32:30.473-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "525146",
    "ThreadId": "231516",
    "Html": "Sorry for such a late answer. I was very busy last few weeks/months. <br>\r\n<br>\r\n<div>2010/10/19 Al3x3 <span dir=\"ltr\">&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt;</span><br>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<div>\r\n<p>From: Al3x3</p>\r\n<div>\r\n<p>Hi,</p>\r\n<p>first of all, thank you very much for this sample. It's a nice piece of code and it helped me a lot in understanding cqrs and event sourcing. But there are two things in the event sourcing branch that I don't understand. Both are related to the private Apply()\r\n method in the DDDSample.Domain.AggregateRoot class. First, why do you call these On*() methods?</p>\r\n</div>\r\n</div>\r\n</blockquote>\r\n<div>This thing is a mental shortcut from registering each entity (for each of its events) in the EventBus (as you mentioned below). Instead of explicitly registering each event, I made a convention that if method starts with On and accepts a single parameter,\r\n it is an event handler and should be wired with an appropriate event. This is better ilustrated in NCQRS framework, where you can have different event registration strategies (among which there is a similar to mine, but there are also other as well).</div>\r\n<div></div>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<div>\r\n<div>\r\n<p>If an entity should be notified about them why don't you just use Bus.Register()? Second, why do you use reflections? This seems kind of dirty ;) to me... Why don't you use e.g. overloads of say AggregateRoot.OnEvent(Event e) or something like this?</p>\r\n</div>\r\n</div>\r\n</blockquote>\r\n<div>Reflection is a necessity here I believe. Overloads early-bound so they can't help when the code gets an event (as an Object) and has to route is to the appropriate subscribers.</div>\r\n<div><br>\r\n</div>\r\n<div>Hope that helps</div>\r\n<div>Szymon</div>\r\n<div></div>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<div>\r\n<div>\r\n<p>Thank you!</p>\r\n</div>\r\n<div>\r\n<p>Read the <a href=\"http://dddsamplenet.codeplex.com/Thread/View.aspx?ThreadId=231516&ANCHOR#Post509481\" target=\"_blank\">\r\nfull discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:dddsamplenet@discussions.codeplex.com?subject=[dddsamplenet:231516]\" target=\"_blank\">dddsamplenet@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:dddsamplenet@discussions.codeplex.com\" target=\"_blank\">\r\ndddsamplenet@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"https://dddsamplenet.codeplex.com/subscriptions/thread/project/edit\" target=\"_blank\">\r\nunsubscribe or change your settings</a> on codePlex.com.</p>\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at\r\n<a href=\"http://codeplex.com\" target=\"_blank\">codeplex.com</a></p>\r\n</div>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n",
    "PostedDate": "2010-11-21T21:48:10.547-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]